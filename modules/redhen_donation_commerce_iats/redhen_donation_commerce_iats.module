<?php

/**
 * @file
 * RedHen customizations for the Commerce iATS payment method.
 */

/**
 * TODO: If direct post is enabled.
 *
 * Add hidden iATS direct post fields to donation form.
 * When donation form is submitted, populate direct post fields via JS.
 * POST donation form to new endpoint in redhen_donation_endpoints module.
 *   Create customer / order here.
 * AFTER customer / order have been created:
 *   POST direct post field data directly to iATS.
 * Add callback to handle response from iats.
 * Continue donation process as usual on response from iats.
 */

/**
 * Implements hook_menu().
 */
function redhen_donation_commerce_iats_menu() {
  $items = array();

  // Add a callback URL for iATS Direct Post payments.
  $items['redhen_donation/commerce_iats/direct_post_relay'] = array(
    'title' => 'Redhen Donation Commerce iATS Direct Post Relay URL',
    'page callback' => 'redhen_donation_commerce_iats_direct_post_relay',
    'access callback' => 'redhen_donation_commerce_iats_direct_post_relay_access',
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_commerce_payment_method_info().
 */
function redhen_donation_commerce_iats_commerce_payment_method_info() {
  $payment_methods = array();

  $commerce_iats_path = drupal_get_path('module', 'commerce_iats');

  $payment_methods['redhen_iats_credit_card'] = array(
    'base' => 'redhen_donation_commerce_iats_credit_card',
    'title' => t('iATS Payments: RedHen custom credit card payment'),
    'short_title' => t('RedHen iATS credit card payment'),
    'display_title' => t('Credit card'),
    'description' => t('Integrates the iATS ProcessLink webservice width RedHen for credit card payments.'),
    'file' => $commerce_iats_path . '/includes/commerce_iats.credit_card.inc',
  );

  return $payment_methods;
}

/**
 * Payment method callback: settings form.
 */
function redhen_donation_commerce_iats_credit_card_settings_form($settings = NULL) {
  module_load_include('inc', 'commerce_payment', 'includes/commerce_payment.credit_card');

  return commerce_iats_credit_card_settings_form_base($settings);
}

/**
 * Payment method callback: checkout form.
 */
function redhen_donation_commerce_iats_credit_card_submit_form($payment_method, $pane_values, $checkout_pane, $order) {
  module_load_include('inc', 'commerce_payment', 'includes/commerce_payment.credit_card');

  // Prepare the fields to include on the credit card form.
  $fields = array(
    'code' => '',
    'type' => commerce_iats_enabled_credit_card_types($payment_method),
  );

  $form = commerce_payment_credit_card_form($fields);

  if (strstr($_SERVER['HTTP_REFERER'], '/admin/')) {
    // If the form is requested via the admin panel, CVV is optional.
    $form['credit_card']['code']['#required'] = FALSE;
  }

  if (isset($payment_method['settings']['direct_post']['enable_direct_post']) && $payment_method['settings']['direct_post']['enable_direct_post'] == 1) {
    // Add empty direct post form fields.
    $form['direct_post'] = redhen_donation_commerce_iats_direct_post_form_base($payment_method);

    // Add direct post JavaScript.
    $form['#attached']['js'] = array(
      drupal_get_path('module', 'redhen_donation_commerce_iats') . '/js/redhen_donation_commerce_iats_dp.js',
    );

    // Change form action so the form POSTs directly to iATS.
    $form['#action'] = url(COMMERCE_IATS_DIRECT_POST_URL, array('external' => TRUE));
  }

  return $form;
}

/**
 * Payment method callback: checkout form validation.
 */
function redhen_donation_commerce_iats_credit_card_submit_form_validate($payment_method, $pane_form, $pane_values, $order, $form_parents = array()) {
  module_load_include('inc', 'commerce_iats', 'includes/commerce_iats.credit_card');

  return commerce_iats_credit_card_submit_form_validate($payment_method, $pane_form, $pane_values, $order, $form_parents = array());
}

/**
 * Payment method callback: checkout form submission.
 */
function redhen_donation_commerce_iats_credit_card_submit_form_submit($payment_method, $pane_form, $pane_values, $order, $charge) {
  module_load_include('inc', 'commerce_iats', 'includes/commerce_iats.credit_card');

  return commerce_iats_credit_card_submit_form_submit($payment_method, $pane_form, $pane_values, $order, $charge);
}

/**
 * Returns an array of form elements common to all Direct Post forms.
 *
 * @param array $payment_method
 *   The current payment method.
 *
 * @return array
 *   Array of common Direct Post form fields.
 */
function redhen_donation_commerce_iats_direct_post_form_base($payment_method) {
  global $base_url;

  $form = array();

  // Relay URL. This is where iATS will POST transaction results.
  $form['iats_dpm_relay_url'] = array(
    '#type' => 'hidden',
    '#name' => 'IATS_DPM_RelayURL',
    '#default_value' => $base_url . '/redhen_donation/commerce_iats/direct_post_relay',
  );

  // Process Key.
  $form['iats_dpm_process_key'] = array(
    '#type' => 'hidden',
    '#name' => 'IATS_DPM_ProcessID',
    '#default_value' => $payment_method['settings']['direct_post']['process_key'],
  );

  // Total processed amount as a decimal.
  $form['iats_dpm_amount'] = array(
    '#type' => 'hidden',
    '#name' => 'IATS_DPM_Amount',
    '#default_value' => '',
  );

  // Invoice number.
  $form['iats_dpm_invoice'] = array(
    '#type' => 'hidden',
    '#name' => 'IATS_DPM_Invoice',
    '#default_value' => '',
  );

  // Send payment method instance ID and truncated direct post key to iATS.
  // iATS will return this string for verification.
  // The donation order ID is added to this string later.
  $comment_parts = array(
    $payment_method["instance_id"],
    // Process key used to verify response from iATS.
    // Trimmed to avoid IATS_DPM_Comment length limit (110 chars.)
    substr($payment_method['settings']['direct_post']['process_key'], 0, 8),
  );

  $form['iats_dpm_comment'] = array(
    '#type' => 'hidden',
    '#name' => 'IATS_DPM_Comment',
    '#default_value' => COMMERCE_IATS_COMMENT_PREFIX . implode('|', $comment_parts),
  );

  // First name for the end user.
  $form['iats_dpm_first_name'] = array(
    '#type' => 'hidden',
    '#name' => 'IATS_DPM_FirstName',
    '#default_value' => '',
  );

  // Last name for the end user.
  $form['iats_dpm_last_name'] = array(
    '#type' => 'hidden',
    '#name' => 'IATS_DPM_LastName',
    '#default_value' => '',
  );

  // Address for the end user.
  $form['iats_dpm_address'] = array(
    '#type' => 'hidden',
    '#name' => 'IATS_DPM_Address',
    '#default_value' => '',
  );

  // City of the address.
  $form['iats_dpm_city'] = array(
    '#type' => 'hidden',
    '#name' => 'IATS_DPM_City',
    '#default_value' => '',
  );

  // Province of the address.
  $form['iats_dpm_province'] = array(
    '#type' => 'hidden',
    '#name' => 'IATS_DPM_Province',
    '#default_value' => '',
  );

  // Country of the address.
  $form['iats_dpm_country'] = array(
    '#type' => 'hidden',
    '#name' => 'IATS_DPM_Country',
    '#default_value' => '',
  );

  // Zip code of the address.
  $form['iats_dpm_zip_code'] = array(
    '#type' => 'hidden',
    '#name' => 'IATS_DPM_ZipCode',
    '#default_value' => '',
  );

  // Method of payment.
  $form['iats_dpm_mop'] = array(
    '#type' => 'hidden',
    '#name' => 'IATS_DPM_MOP',
    '#default_value' => '',
  );

  // Account (card) number.
  $form['iats_dpm_account_number'] = array(
    '#type' => 'hidden',
    '#name' => 'IATS_DPM_AccountNumber',
    '#default_value' => '',
  );

  // CVV2.
  $form['iats_dpm_cvv2'] = array(
    '#type' => 'hidden',
    '#name' => 'IATS_DPM_CVV2',
    '#default_value' => '',
  );

  return $form;
}

/**
 * Relay page for iATS Direct Post response.
 *
 * This function creates the page that receives Direct Post payment
 * responses from the iATS API.
 *
 * Processes the response, creates a payment transaction and produces
 * the client-side JavaScript that iATS uses to redirect the user
 * back into the checkout process.
 */
function redhen_donation_commerce_iats_direct_post_relay() {
  global $base_url;

  if (isset($_POST['IATS_Comment'])) {
    $comment = $_POST['IATS_Comment'];
  }
  elseif (isset($_POST['IATS_comment'])) {
    $comment = $_POST['IATS_comment'];
  }

  if (isset($comment)) {
    $comment_parts = explode('|', $comment);

    // Parse the order ID and payment method instance ID from the comment
    // property. Index 0 is the comment prefix, which is not needed here.
    $order_id = $comment_parts[1];
    $payment_method_instance_id = $comment_parts[2] . '|' . $comment_parts[3];

    $success = redhen_donation_commerce_iats_direct_post_process_response($_POST, $order_id, $payment_method_instance_id);

    //$target_url = $base_url . '/checkout/' . $order_id;
    // TODO: Send the user to the appropriate checkout page,
    // based on transaction success.
    //$target_url .= ($success) ? '/complete' : '/review';
  }
  else {
    $target_url = $base_url . '/checkout';
  }

  $markup = "<html>\n"
    . "<head>\n"
    . "<script type='text/javascript' charset='utf-8'>\n"
    . "window.location = '{$target_url}';\n"
    . "</script>\n"
    . "</head>\n"
    . "</html>\n";

  echo $markup;
  exit();
}

/**
 * Determines access to the Direct Post relay URL using values from
 * the POST request sent by the iATS API.
 *
 * @return bool
 *   TRUE or FALSE indicating relay URL access.
 */
function redhen_donation_commerce_iats_direct_post_relay_access() {
  if (isset($_POST['IATS_Comment'])) {
    $comment = $_POST['IATS_Comment'];
  }
  elseif (isset($_POST['IATS_comment'])) {
    $comment = $_POST['IATS_comment'];
  }

  if (isset($comment)) {
    $comment_parts = explode('|', $comment);

    // Parse the payment method instance ID and process key from the comment
    // property. Index 0 is the comment prefix, which is not used here.
    $payment_method_instance_id = $comment_parts[1] . '|' . $comment_parts[2];
    $process_key = $comment_parts[3];

    $payment_method = commerce_payment_method_instance_load($payment_method_instance_id);
    if ($payment_method) {
      // Received process key must match payment method's process key.
      $payment_method = commerce_payment_method_instance_load($payment_method_instance_id);
      if (substr($payment_method['settings']['direct_post']['process_key'], 0, 8) == $process_key) {
        return TRUE;
      }
    }
  }

  return FALSE;
}

/**
 * Processes a Direct Post response.
 *
 * Creates payment transaction and completes order on payment success.
 *
 * @param array $response
 *   Associative array as described below:
 *
 * $response['IATS_AccountNumber'] = '2220';
 * $response['IATS_MOP'] = 'VISA';
 * $response['IATS_PaymentType'] = 'CreditCard';
 * $response['IATS_Result'] = 'OK: 678594:';
 * $response['IATS_TransID'] = 'A70FC33C';
 * $response['IATS_Address'] = '123 Street Name';
 * $response['IATS_City'] = 'City';
 * $response['IATS_Comment'] = '';
 * $response['IATS_Country'] = 'US';
 * $response['IATS_EMail'] = '';
 * $response['IATS_FirstName'] = 'First Name';
 * $response['IATS_LastName'] = 'Last Name';
 * $response['IATS_Phone'] = '';
 * $response['IATS_Fax'] = '';
 * $response['IATS_Phone2'] = '';
 * $response['IATS_State'] = 'State';
 * $response['IATS_ZipCode'] = '00000';
 * $response['IATS_Amount'] = '10.00';
 * $response['IATS_Payment_AgencyCodeHash'] = '984816FD329622876E14907634264E6F332E9FB3';
 * $response['IATS_ExpiryMonth'] = '04';
 * $response['IATS_ExpiryYear'] = '2016';
 * $response['IATS_Payment_SubCode'] = '88';
 *
 * @param int $order_id
 *   The ID of the order being processed.
 * @param string $payment_method_instance_id
 *   The instance ID of the payment method used in this transaction.
 *
 * @return bool
 *   TRUE if the transaction was successful.
 */
function redhen_donation_commerce_iats_direct_post_process_response(array $response, $order_id, $payment_method_instance_id) {
  if (!empty($response['IATS_Result'])) {
    // TODO: Load donation.
    // TODO: Add payment result to donation.
    // TODO: Save updated donation.

    return TRUE;
  }

  return FALSE;
}
